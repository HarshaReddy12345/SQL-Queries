CREATE OR ALTER PROC udp_TotalHrsAndMin  @iTransId BIGINT,@iUserId INT = 0  
AS  
BEGIN  
    SET NOCOUNT ON;  
    
    SELECT @iTransId = dbo.fCrm_IntToAPITransId(@iTransId,0);

    DECLARE @Duration INT,@Duration1 INT,@CallsDuration INT,@CallsDuration1 INT,@ReqNo INT,@JobCard INT, 
        @ModifiedDate BIGINT,@TimeStr VARCHAR(8),@Hours INT,@Minutes INT,@Seconds INT

    -- Get Request Number and Job Card
    SELECT @ReqNo = ServiceRequestNo,@ModifiedDate = iModifiedDate,@JobCard = JobCardNo FROM vCore_ServiceWorklog WITH (NOLOCK) 
    WHERE iMasterId = @iTransId; 

    -- Sum up Duration
    SELECT @Duration = SUM(CASE WHEN Duration = 0 THEN 0 ELSE Duration END) FROM vCore_ServiceWorklog WITH (NOLOCK) 
    WHERE ServiceRequestNo = @ReqNo

    -- Convert Duration to Time String once
    SET @TimeStr = dbo.fCore_IntToTime(@Duration)

    -- Extract Hours, Minutes, Seconds from Time String
    SET @Hours = CAST(LEFT(@TimeStr, 2) AS INT)
    SET @Minutes = CAST(SUBSTRING(@TimeStr, 4, 2) AS INT)
    SET @Seconds = CAST(RIGHT(@TimeStr, 2) AS INT)

    -- Convert to total int format
    SET @Duration1 = dbo.fCore_TimeToInt(RIGHT('0' + CAST(@Hours + (@Minutes / 60) AS VARCHAR), 2) + ':' +RIGHT('0' + CAST(@Minutes % 60 AS VARCHAR),2) + ':' +RIGHT('0' + CAST(@Seconds AS VARCHAR), 2))

    -- Update only if valid
    IF (@Duration > 0 )  
    BEGIN
        UPDATE vCrm_Calls SET TotalHours = @Duration1 WHERE iTransId = @ReqNo

        -- Sum of TotalHours for JobCard
        SELECT 
            @CallsDuration = SUM(CASE WHEN TotalHours = 0  THEN 0 ELSE TotalHours END) FROM vCrm_Calls WITH (NOLOCK) 
        WHERE JobCardNo = @JobCard

        -- Convert to Time String once
        SET @TimeStr = dbo.fCore_IntToTime(@CallsDuration)

        SET @Hours = CAST(LEFT(@TimeStr, 2) AS INT)
        SET @Minutes = CAST(SUBSTRING(@TimeStr, 4, 2) AS INT)
        SET @Seconds = CAST(RIGHT(@TimeStr, 2) AS INT)

        SET @CallsDuration1 = dbo.fCore_TimeToInt(RIGHT('0' + CAST(@Hours + (@Minutes / 60) AS VARCHAR), 2) + ':' +RIGHT('0' + CAST(@Minutes % 60 AS VARCHAR), 2) + ':' +RIGHT('0' + CAST(@Seconds AS VARCHAR), 2))

        UPDATE vCore_JobCard  SET TotalHours = @CallsDuration1  WHERE iMasterId = @JobCard
    END  
END

go

CREATE OR ALTER PROC udp_StatusFromReqToJobCard @iTransId BIGINT,@iUserId INT = 0
AS
BEGIN
    SET NOCOUNT ON;

    SELECT @iTransId = dbo.fCrm_IntToAPITransId(@iTransId, 0);

    DECLARE @Status INT, @JobCard INT, @ServiceName INT;

    SELECT  @Status = iStatusId, @JobCard = JobCardNo,@ServiceName = ServiceName FROM vCrm_Calls WHERE iTransId = @iTransId;

    -- Update the service status of the matching job card line item (only for MainCategory=2)
    UPDATE vuCore_JobCard_ProductGrid_Details SET ServiceStatus = @Status WHERE iMasterId = @JobCard AND PartsServiceName = @ServiceName 
    AND MainCategory = 2;

    -- Check if all line items are resolved (i.e., ServiceStatus = 59)
    IF NOT EXISTS (
        SELECT 1 FROM vuCore_JobCard_ProductGrid_Details WHERE iMasterId = @JobCard  AND ISNULL(ServiceStatus, 0) <> 59 AND MainCategory = 2)
    BEGIN
        UPDATE vCore_JobCard SET JobCardStatus = 3 WHERE iMasterId = @JobCard;
    END
END

